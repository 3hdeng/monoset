/**
*
* Imports
*
**/
/**
*
* Variables
*
**/
/**
*
* Functions
*
**/
/**
*
* Mixins
*
**/
/**
*
* Reset
*
**/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

html, body {
  height: 100%; }

a img {
  border: none; }

blockquote {
  quotes: none; }

blockquote:before, blockquote:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle; }

/**
*
* Global
*
**/
html, body {
  height: 100%;
  width: 100%; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

::-moz-selection {
  background: #2ba9e0;
  color: #fff; }

::selection {
  background: #2ba9e0;
  color: #fff; }

/**
*
* Typography
*
**/
body {
  font-family: "Roboto", Helvetica, Arial, sans-serif;
  font-weight: 100;
  color: #111;
  line-height: 1.5;
  font-smoothing: antialiased; }

main h1, main h2, main h3, main h4, main h5, main h6, main hgroup,
main ul, main ol, main dl,
main blockquote, main p, main address,
main table,
main form,
main pre,
main hr {
  margin-bottom: 2rem; }

main h1 {
  font-size: 50px;
  font-size: 3.125rem;
  line-height: 1;
  margin: 0 0 1rem 0; }
  @media (min-width: 767px) {
    main h1 {
      font-size: 60px;
      font-size: 3.75rem;
      margin: 0 0 2rem 0; } }

p {
  margin: 0 0 2rem 0; }

h2 {
  font-size: 48px;
  font-size: 3rem;
  line-height: .9;
  margin: 0 0 2rem 0; }

h3 {
  font-size: 36px;
  font-size: 2.25rem; }

h4 {
  font-size: 24px;
  font-size: 1.5rem; }

h5 {
  font-size: 20px;
  font-size: 1.25rem; }

h6 {
  font-size: 16px;
  font-size: 1rem; }

strong {
  font-weight: 400; }

blockquote {
  display: block;
  padding: 1rem 3rem 1rem 2.5rem;
  position: relative;
  font-family: Georgia, Times, "Times New Roman", serif;
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2;
  font-style: italic; }

blockquote::before {
  content: "\201C";
  font-size: 60px;
  font-size: 3.75rem;
  font-weight: 700;
  color: #bdbdbd;
  font-style: normal;
  position: absolute;
  left: 0;
  top: 5px; }

blockquote::after {
  content: ""; }

pre {
  white-space: pre-wrap; }

em {
  font-family: Georgia, Times, "Times New Roman", serif;
  font-style: italic; }

.large {
  font-weight: 400;
  color: #424242; }

@font-face {
  font-family: "responsivenav";
  src: url("../icons/responsivenav.eot");
  src: url("../icons/responsivenav.eot?#iefix") format("embedded-opentype"), url("../icons/responsivenav.ttf") format("truetype"), url("../icons/responsivenav.woff") format("woff"), url("../icons/responsivenav.svg#responsivenav") format("svg");
  font-weight: normal;
  font-style: normal; }

/**
*
* Lists
*
**/
ul, ol {
  list-style-position: inside; }

ul {
  list-style-type: circle; }

/**
*
* Links
*
**/
a {
  color: #ff5027;
  transition: .5s;
  text-decoration: none; }
  a:hover {
    color: #c02400; }
  a:visited {
    text-decoration: none;
    outline: 0; }

/**
*
* Drupal Overrides
*
**/
.toolbar-fixed .header-main {
  top: 39px; }

.toolbar-fixed.toolbar-tray-open .header-main {
  top: 79px; }

.messages {
  padding: 1rem;
  margin: 0 0 2rem;
  border: 1px solid #eeeeee; }
  .messages.messages--status {
    border-color: #2ba9e0; }

/**
*
* Animations
*
**/
@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }
@keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@-webkit-keyframes blurIn {
  from {
    opacity: 0;
    -webkit-filter: blur(5px);
            filter: blur(5px); }
  to {
    opacity: 1;
    -webkit-filter: blur(0);
            filter: blur(0); } }

@keyframes blurIn {
  from {
    opacity: 0;
    -webkit-filter: blur(5px);
            filter: blur(5px); }
  to {
    opacity: 1;
    -webkit-filter: blur(0);
            filter: blur(0); } }

@-webkit-keyframes pulsate {
  0% {
    opacity: 0.0; }
  50% {
    opacity: 1.0; }
  100% {
    opacity: 0.0; } }

@keyframes pulsate {
  0% {
    opacity: 0.0; }
  50% {
    opacity: 1.0; }
  100% {
    opacity: 0.0; } }

/* http://prismjs.com/download.html?themes=prism&languages=markup+twig+css+scss+markdown */
/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */
code[class*="language-"],
pre[class*="language-"] {
  color: black;
  text-shadow: 0 1px white;
  font-family: Consolas, Monaco, 'Andale Mono', monospace;
  direction: ltr;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  line-height: 1.5;
  -moz-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
  font-size: 14px; }

pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
  text-shadow: none;
  background: #b3d4fc; }

pre[class*="language-"]::selection, pre[class*="language-"] ::selection,
code[class*="language-"]::selection, code[class*="language-"] ::selection {
  text-shadow: none;
  background: #b3d4fc; }

@media print {
  code[class*="language-"],
  pre[class*="language-"] {
    text-shadow: none; } }

/* Code blocks */
pre[class*="language-"] {
  padding: 1rem;
  margin: 0 0 2rem 0;
  overflow: auto; }

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: #f5f5f5; }

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em; }

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: slategray; }

.token.punctuation {
  color: #999; }

.namespace {
  opacity: .7; }

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: #905; }

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #690; }

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #a67f59;
  background: rgba(255, 255, 255, 0.5); }

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #07a; }

.token.function {
  color: #DD4A68; }

.token.regex,
.token.important,
.token.variable {
  color: #e90; }

.token.important,
.token.bold {
  font-weight: bold; }

.token.italic {
  font-style: italic; }

.token.entity {
  cursor: help; }

/**
*
* Layout
*
**/
.contain {
  margin: 0 auto;
  padding: 0 1rem; }
  .contain:before,
  .contain:after {
    content: "";
    display: table; }
  .contain:after {
    clear: both; }
  @media (min-width: 767px) {
    .contain {
      width: 80%;
      padding: 0; } }
  @media (min-width: 1200px) {
    .contain {
      width: 70%; } }

.content {
  padding: 2rem 1rem;
  min-height: 670px; }
  @media (min-width: 767px) {
    .content {
      padding: 7rem 0 2rem 0;
      -webkit-animation: fadeIn ease-in 1;
              animation: fadeIn ease-in 1;
      -webkit-animation-fill-mode: forwards;
              animation-fill-mode: forwards;
      -webkit-animation-duration: .3s;
              animation-duration: .3s; } }

.region-content-top {
  margin: 0 0 2rem 0; }

.region-content {
  margin: 0 0 2rem 0; }

.region-content-bottom {
  padding: 3rem 0;
  border-top: 1px solid #eeeeee; }

/**
*
* Header
*
**/
.header-main {
  position: relative;
  height: 3.8rem;
  border-bottom: solid 1px #eeeeee; }
  @media (min-width: 767px) {
    .header-main {
      position: fixed;
      z-index: 100;
      top: 0;
      width: 100%;
      padding: 1rem 0;
      background: #fff; } }
  > .path-frontpage .header-main {
    border: none;
    background: none;
    transition: all 0.5s ease-in-out; }
    > .path-frontpage .header-main .menu li a {
      color: #757575; }
  .header-main.sticky {
    background: rgba(255, 255, 255, 0.9);
    box-shadow: 0 2px 5px rgba(17, 17, 17, 0.25); }
    .header-main.sticky .menu li a {
      color: #9e9e9e; }

.logo {
  display: none; }
  @media (min-width: 767px) {
    .logo {
      display: block;
      float: left;
      width: 20px;
      height: 26px; } }

.logo-svg {
  fill: #9e9e9e;
  transition: all 0.3s; }
  .logo-svg:hover {
    fill: #2ba9e0; }

.header-main .menu {
  display: none; }
  @media (min-width: 767px) {
    .header-main .menu {
      display: block;
      margin: 3px 0 0 0;
      float: right; } }

.header-main .menu li {
  display: inline;
  margin: 0 1.5rem 0 0; }
  .header-main .menu li:last-child {
    margin: 0; }
  .header-main .menu li a {
    display: inline-block;
    font-size: 14px;
    font-size: 0.875rem;
    font-weight: 500;
    text-transform: uppercase;
    color: #9e9e9e; }
    .header-main .menu li a:hover {
      color: #2ba9e0; }

/**
*
* Footer
*
**/
.footer-main {
  padding: 1rem 0;
  background: #f5f5f5;
  border-top: 1px solid #eeeeee;
  font-size: 14px;
  font-size: 0.875rem;
  z-index: 100;
  text-align: center; }
  .footer-main .region-footer {
    margin: 5px 0 0 0;
    float: left; }
  .footer-main .twitter {
    position: absolute;
    left: 49%;
    fill: #9e9e9e;
    transition: all 0.3s; }
    .footer-main .twitter:hover {
      fill: #2ba9e0; }
  .footer-main .top-link {
    display: block;
    float: right; }
  .footer-main .arrow-up {
    margin: 0 0 -7px 0;
    width: 32px;
    height: 32px;
    fill: #616161; }

/**
*
* Forms
*
**/
input[type="text"],
input[type="email"],
input[type="password"],
textarea {
  display: block;
  background: none;
  border: 1px solid #e0e0e0;
  background-color: #fff;
  width: 100%;
  padding: 1rem;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  box-shadow: none;
  border-radius: none;
  transition: border 0.3s;
  font-size: 14px;
  font-size: 0.875rem;
  color: #2ba9e0;
  font-family: "Roboto", Helvetica, Arial, sans-serif;
  font-weight: 100; }

input[type="submit"] {
  display: block;
  border: none;
  background: #9e9e9e;
  width: 100%;
  padding: 1rem;
  margin: 0 0 1rem;
  cursor: pointer;
  color: #fff;
  font-size: 14px;
  font-size: 0.875rem;
  font-weight: 100;
  letter-spacing: 1px;
  transition: all 0.3s; }
  input[type="submit"]:hover {
    background: #2ba9e0;
    color: #fff; }

input[type="text"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
select:focus,
textarea:focus {
  outline: none;
  border-color: #2ba9e0; }

input:-webkit-autofill {
  -webkit-box-shadow: 0 0 0px 1000px white inset; }

select {
  background: transparent;
  width: 100%;
  padding: 1rem;
  border: 1px solid #e0e0e0;
  border-radius: 0;
  background-color: #fff;
  background: url(../icons/chevron-down.svg) no-repeat 99% 50%;
  color: #2ba9e0;
  box-shadow: none;
  border-radius: none;
  transition: border 0.3s;
  -moz-appearance: none;
       appearance: none;
  -webkit-appearance: none; }

.form-item {
  margin: 0 0 1rem; }

/**
*
* Off Canvas Nav
*
**/
.menu-btn {
  position: absolute;
  top: 0;
  left: 0;
  overflow: hidden;
  width: 60px;
  height: 55px;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  text-decoration: none;
  text-indent: -300px;
  cursor: pointer; }
  @media (min-width: 767px) {
    .menu-btn {
      display: none; } }
  .menu-btn.close {
    left: 75%; }

.menu-btn:before {
  color: #111;
  font: normal 28px/55px "responsivenav";
  text-transform: none;
  text-align: center;
  position: absolute;
  content: "\2261";
  text-indent: 0;
  speak: none;
  width: 100%;
  left: 0;
  top: 0; }

.menu-btn.open:hover:before {
  color: #212121; }

.menu-btn.close:before {
  font-size: 24px;
  content: "\78";
  color: #fff; }

.pushy {
  position: fixed;
  width: 250px;
  height: 100%;
  top: 0;
  z-index: 9999;
  background: #111;
  overflow: auto;
  -webkit-overflow-scrolling: touch; }

.pushy-left {
  -webkit-transform: translate3d(-250px, 0, 0);
          transform: translate3d(-250px, 0, 0); }

.pushy-open {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0); }

.container-push, .push-push {
  -webkit-transform: translate3d(250px, 0, 0);
          transform: translate3d(250px, 0, 0); }

.pushy, .container-main, .push {
  transition: -webkit-transform 0.2s cubic-bezier(0.16, 0.68, 0.43, 0.99);
  transition: transform 0.2s cubic-bezier(0.16, 0.68, 0.43, 0.99); }

.site-overlay {
  display: none; }

.pushy-active .site-overlay {
  display: block;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 9998;
  background-color: rgba(0, 0, 0, 0.5);
  -webkit-animation: fadeInopacity 500ms;
          animation: fadeInopacity 500ms; }

.offcanvas {
  padding: 4rem 0 0 0; }

.offcanvas .menu li a {
  display: block;
  padding: 1rem;
  border-bottom: 1px solid #212121;
  color: #bdbdbd; }
  .offcanvas .menu li a:hover {
    color: #fff; }

/**
*
* Front
*
**/
.front-section {
  position: relative;
  z-index: 1; }

/**
*
* Front Cover
*
**/
.cover {
  width: 100%;
  height: 100vh;
  background: url(../images/cover.jpg) no-repeat 0 0;
  border-radius: 4px;
  box-shadow: 5px 1px 0px 1px #f04e29;
  background-size: cover;
  -webkit-animation: blurIn 1.5s;
          animation: blurIn 1.5s;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }
  @media (min-width: 767px) {
    .no-touch .cover {
      background-attachment: fixed; } }
  .cover .cover-title {
    text-align: center;
    margin: 40% 0 0 0; }
    @media (min-width: 767px) {
      .no-touch .cover .cover-title {
        position: fixed;
        top: 40%;
        left: 50%;
        width: 100%;
        -webkit-transform: translate(-51%, 0);
                transform: translate(-51%, 0);
        margin: 0; } }
  .cover h1 {
    font-size: 40px;
    font-size: 2.5rem;
    margin: 0 0 1rem 0;
    line-height: 1;
    color: #9e9e9e; }
    @media (min-width: 767px) {
      .cover h1 {
        font-size: 94px;
        font-size: 5.875rem; } }
  .cover .drupal-logo {
    vertical-align: bottom;
    width: 50px;
    height: 56px; }
    @media (min-width: 767px) {
      .cover .drupal-logo {
        width: 100px;
        height: 113px; } }
  .cover .drupal-logo path {
    fill: #bdbdbd;
    transition: all 0.3s; }
  .cover .cover-title:hover .drupal-logo path {
    fill: #2ba9e0; }
  .cover .intro-title {
    font-size: 20px;
    font-size: 1.25rem;
    margin: 0 0 2rem 0; }
  .cover .cta-button {
    display: inline-block;
    vertical-align: top;
    padding: 8px 12px 8px 25px;
    border-radius: 40px;
    background: rgba(17, 17, 17, 0.25);
    color: #fafafa;
    font-weight: 400;
    letter-spacing: 1px; }
    @media (min-width: 767px) {
      .cover .cta-button {
        border: 2px solid #eeeeee;
        background: none; } }
    .cover .cta-button:hover {
      background: rgba(17, 17, 17, 0.25); }
  .cover .arrow {
    margin: -14px 0 -11px -4px;
    width: 32px;
    height: 32px;
    fill: #f5f5f5;
    display: inline-block;
    -webkit-animation: pulsate 2s linear infinite;
            animation: pulsate 2s linear infinite;
    opacity: 1; }

/**
*
* Front Features
*
**/
.features {
  background: #fff;
  border-top: 1px solid #eeeeee;
  border-bottom: 1px solid #eeeeee;
  padding: 3rem 0; }
  @media (min-width: 767px) {
    .features {
      padding: 5rem 0; } }
  .features h2 {
    text-align: center;
    font-size: 40px;
    font-size: 2.5rem;
    margin: 0 0 3rem 0; }
    @media (min-width: 767px) {
      .features h2 {
        font-size: 50px;
        font-size: 3.125rem;
        margin: 0 0 4rem 0; } }
  .features .feature-list li {
    list-style-type: none;
    vertical-align: top;
    text-align: center;
    margin: 0 0 1rem 0;
    font-size: 18px;
    font-size: 1.125rem;
    font-weight: 300; }
    @media (min-width: 767px) {
      .features .feature-list li {
        margin: 0 0 2rem 0;
        text-align: left;
        float: left;
        width: 33.3333%;
        font-size: 17px;
        font-size: 1.0625rem; } }
    .features .feature-list li:hover .checkbox {
      fill: #2ba9e0; }
    .features .feature-list li .checkbox {
      display: none;
      fill: #bdbdbd; }
      @media (min-width: 767px) {
        .features .feature-list li .checkbox {
          margin: 0 5px 0 0;
          display: inline-block; } }

/**
*
* Front Icons
*
**/
.icons {
  background: #fafafa;
  border-bottom: 1px solid #eeeeee;
  text-align: center;
  padding: 3rem 0; }
  @media (min-width: 767px) {
    .icons {
      padding: 5rem 0; } }
  .icons h2 {
    font-size: 40px;
    font-size: 2.5rem;
    margin: 0 0 3rem 0; }
    @media (min-width: 767px) {
      .icons h2 {
        font-size: 50px;
        font-size: 3.125rem;
        margin: 0 0 4rem 0; } }
  .icons .icon-container {
    margin: 0 0 2rem 0; }
  .icons .icon-box {
    display: inline-block;
    padding: 3rem;
    margin: 0 1rem 1rem 0;
    border: 1px solid #eeeeee;
    background: #fff; }
    .icons .icon-box:hover .icon {
      fill: #2ba9e0; }
  .icons .icon {
    width: 32px;
    height: 32px;
    display: inline-block;
    fill: #757575;
    transition: all 0.3s; }

/**
*
* Front Posts
*
**/
.posts {
  background: #fff;
  border-bottom: 1px solid #eeeeee;
  display: table;
  table-layout: fixed;
  width: 100%;
  position: relative; }
  .posts .views-row {
    transition: all 0.3s;
    padding: 2rem 1rem;
    border-bottom: 1px solid #eeeeee; }
    @media (min-width: 767px) {
      .posts .views-row {
        display: table-cell;
        width: 33.333333%;
        padding: 3rem;
        border-right: 1px solid #eeeeee;
        border-bottom: none; } }
    .posts .views-row:last-child {
      border: none; }
    .posts .views-row:hover {
      background: #2ba9e0; }
    .posts .views-row:hover .date,
    .posts .views-row:hover p a,
    .posts .views-row:hover h2 a {
      color: #fff; }
  .posts .date {
    font-family: Georgia, Times, "Times New Roman", serif;
    font-style: italic;
    font-size: 14px;
    font-size: 0.875rem;
    margin: 0 0 1rem 0;
    color: #111; }
  .posts h2 {
    font-size: 30px;
    font-size: 1.875rem;
    margin: 0 0 2rem 0;
    line-height: 1; }
    .posts h2 a {
      color: #111; }
  .posts p a {
    color: #616161; }

/**
*
* Front Featured
*
**/
.featured {
  background: #fff url(../images/featured-bg.jpg) no-repeat 50% 0;
  background-size: cover; }
  @media (min-width: 767px) {
    .featured {
      display: table;
      width: 100%;
      table-layout: fixed;
      min-height: 500px; } }
  .featured .featured-box {
    position: relative;
    padding: 2rem 1rem;
    width: 100%;
    border-bottom: 1px solid #757575; }
    .featured .featured-box:last-child {
      border: none; }
    @media (min-width: 767px) {
      .featured .featured-box {
        display: table-cell;
        width: 50%;
        padding: 3rem;
        border-right: 1px solid #757575;
        border-bottom: none; } }
    .featured .featured-box:before {
      content: '';
      width: 100%;
      height: 100%;
      position: absolute;
      z-index: -1;
      top: 0;
      left: 0;
      background: rgba(17, 17, 17, 0.65);
      transition: all 0.3s; }
    .featured .featured-box:hover:before {
      background: rgba(17, 17, 17, 0.75); }
  .featured h2 {
    font-size: 34px;
    font-size: 2.125rem;
    margin: 0 0 2rem 0;
    line-height: 1;
    color: #fff; }
  .featured p {
    color: #fff;
    margin: 0 0 1rem 0; }

/**
*
* Front News
*
**/
.news {
  background: #fafafa;
  border-bottom: 1px solid #eeeeee;
  text-align: center;
  padding: 3rem 0; }
  @media (min-width: 767px) {
    .news {
      padding: 5rem 0; } }
  .news h2 {
    font-size: 40px;
    font-size: 2.5rem;
    margin: 0 0 1rem 0; }
    @media (min-width: 767px) {
      .news h2 {
        font-size: 50px;
        font-size: 3.125rem;
        margin: 0 0 2rem 0; } }
  .news p {
    font-size: 20px;
    font-size: 1.25rem;
    margin: 0 0 2rem 0; }
    @media (min-width: 767px) {
      .news p {
        padding: 0 10rem; } }
  .news .drupal-logo path {
    fill: #bdbdbd;
    transition: all 0.3s; }
  .news .contain:hover .drupal-logo path {
    fill: #2ba9e0; }

/**
*
* Front Source
*
**/
.source {
  background: #fff;
  text-align: center;
  padding: 3rem 0; }
  @media (min-width: 767px) {
    .source {
      padding: 5rem 0; } }
  .source h2 {
    text-align: center;
    font-size: 40px;
    font-size: 2.5rem;
    margin: 0 0 1rem 0; }
    @media (min-width: 767px) {
      .source h2 {
        font-size: 50px;
        font-size: 3.125rem; } }
  .source p {
    font-size: 20px;
    font-size: 1.25rem; }
  .source .source-code {
    width: 64px;
    height: 64px; }
  .source .heart {
    width: 13px;
    height: 13px;
    fill: #ff5027;
    display: inline-block;
    -webkit-animation: pulsate 2s linear infinite;
            animation: pulsate 2s linear infinite;
    opacity: 1; }

/**
*
* Blog
*
**/
.page-blog-view .views-row {
  transition: all 0.3s;
  padding: 2rem 0;
  border-bottom: 1px solid #eeeeee; }
  @media (min-width: 767px) {
    .page-blog-view .views-row {
      float: left;
      width: 50%;
      height: 340px;
      overflow: hidden;
      padding: 2rem 2rem 2rem 0;
      border-right: 1px solid #eeeeee; } }
  .page-blog-view .views-row:nth-child(even) {
    border-right: none; }
    @media (min-width: 767px) {
      .page-blog-view .views-row:nth-child(even) {
        padding: 2rem 0 2rem 2rem; } }
  .page-blog-view .views-row:last-child {
    border-bottom: none; }

.page-blog-view .date {
  font-family: Georgia, Times, "Times New Roman", serif;
  font-style: italic;
  font-size: 14px;
  font-size: 0.875rem;
  margin: 0 0 1rem 0;
  color: #9e9e9e; }

.page-blog-view h2 {
  font-size: 30px;
  font-size: 1.875rem;
  margin: 0 0 2rem 0;
  line-height: 1; }
  .page-blog-view h2 a {
    color: #111; }

.page-blog-view p {
  margin: 0; }

.page-blog-view a {
  color: #616161; }
  .page-blog-view a:hover {
    color: #ff5027; }

/**
*
* Post
*
**/
.node--type-article .page-content {
  margin: 0 auto;
  padding: 0 1rem; }
  @media (min-width: 767px) {
    .node--type-article .page-content {
      width: 80%;
      padding: 0; } }

.node--type-article .node__meta {
  margin: 0 0 2rem 0;
  font-family: Georgia, Times, "Times New Roman", serif;
  font-style: italic;
  color: #9e9e9e; }

/*# sourceMappingURL=data:application/json;base64, */